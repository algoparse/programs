
enum E {
    A,
    B
}

enum LogOpr {
    Not(LogOpr),
    And(LogOpr, LogOpr),
    Or(LogOpr, LogOpr),
    Value(bool)
}

bool calc_LogOpr(LogOpr o) {
    match o {
        Not(v) => return not calc_LogOpr(v)
        And(v1, v2) => return calc_LogOpr(v1) and calc_LogOpr(v2)
        Or(v1, v2) => return calc_LogOpr(v1) or calc_LogOpr(v2)
        Value(v) => return v
    }
}

int main() {
    E e = E.A

    LogOpr o = 
        LogOpr.And(
            LogOpr.Value(true),
            LogOpr.Not(
                LogOpr.Or(
                    LogOpr.Value(true),
                    LogOpr.Value(false)
                )
            )
        )

    println(calc_LogOpr(o))
}